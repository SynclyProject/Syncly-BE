plugins {
    id 'java'
    id 'org.springframework.boot' version '3.4.5'
    id 'io.spring.dependency-management' version '1.1.7'
    id 'com.google.protobuf' version '0.9.4' //gRPC 의 HTTP/2에서 json 대신 사용하는 포멧 (Protocol Buffer)
}

group = 'com.project'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-websocket'

    //lombok
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    runtimeOnly 'com.mysql:mysql-connector-j'
    //runtimeOnly 'org.mariadb.jdbc:mariadb-java-client'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    // Swagger
    // http://localhost:8080/swagger-ui/index.html#/
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.7.0'
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-api:2.7.0'

    //security
    implementation 'org.springframework.boot:spring-boot-starter-security'

    // OAuth2 / JWT
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
    implementation 'io.jsonwebtoken:jjwt-api:0.12.3'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.12.3'
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.12.3'

    implementation "com.auth0:java-jwt:4.4.0"//liveKit 토큰 생성용 (Map 직접 삽입가능)

    // mail
    implementation 'org.springframework.boot:spring-boot-starter-mail'

    // validation
    implementation 'org.springframework.boot:spring-boot-starter-validation'

    // Email
    implementation 'com.sun.mail:jakarta.mail:2.0.1'

    // Redis
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'
    implementation 'org.springframework.boot:spring-boot-starter-cache'


    // S3
    implementation "software.amazon.awssdk:s3:2.25.11"

    //liveKit
    implementation("io.livekit:livekit-server:0.10.0")

    // gRPC + Protobuf
    implementation 'io.grpc:grpc-netty-shaded:1.64.0'
    implementation 'io.grpc:grpc-protobuf:1.64.0'
    implementation 'io.grpc:grpc-stub:1.64.0'

    // Java annotation (gRPC 필수)
    implementation 'javax.annotation:javax.annotation-api:1.3.2'

    // WebSocket
    implementation 'org.springframework.boot:spring-boot-starter-websocket'
}

tasks.named('test') {
    useJUnitPlatform()
}

protobuf {
    protoc {
        artifact = 'com.google.protobuf:protoc:3.25.3'// 실제 컴파일러
    }
    plugins {
        grpc {
            artifact = 'io.grpc:protoc-gen-grpc-java:1.64.0'// gRPC용 플러그인
        }
    }
    generateProtoTasks {
        all().each { task ->
            task.plugins {
                grpc {}// gRPC용 Java Stub 생성
            }
        }
    }
}

sourceSets {
    main {
        proto {
            srcDir 'src/main/proto' // 여기에 livekit의 proto 파일 복사
        }
        java {
            srcDirs 'build/generated/source/proto/main/grpc', 'build/generated/source/proto/main/java'
        }
    }
}